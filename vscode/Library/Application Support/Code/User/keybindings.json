// Place your key bindings in this file to override the defaults
[
	// Wipe (close) from non-editor
	{
		// Close sidebar and focus editor when explorer is focused
		"key": "shift-escape",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.closeSidebar",
				"workbench.action.focusActiveEditorGroup"
			]
		},
		"when": "explorerViewletVisible"
	},
	{
		// Close sidebar and focus editor when sidebar is focused
		"key": "escape",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.closeSidebar",
				"workbench.action.focusActiveEditorGroup"
			]
		},
		"when": "sideBarFocus && !explorerViewletVisible"
	},
	{
		// Close auxiliary bar (secondary bar) and focus editor
		"key": "escape",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.closeAuxiliaryBar",
				"workbench.action.focusActiveEditorGroup"
			]
		},
		"when": "auxiliaryBarFocus"
	},
	{
		// Close panel and focus editor
		"key": "escape",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.closePanel",
				"workbench.action.focusActiveEditorGroup"
			]
		},
		"when": "panelFocus"
	},

	// Coding
	{
		// Move visual selection up
		"key": "shift-k",
		"command": "editor.action.moveLinesUpAction",
		"when": "(vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock') && editorTextFocus"
	},
	{
		// Move visual selection down
		"key": "shift-j",
		"command": "editor.action.moveLinesDownAction",
		"when": "(vim.mode == 'Visual' || vim.mode == 'VisualLine' || vim.mode == 'VisualBlock') && editorTextFocus"
	},
	{
		// Hover action
		"key": "shift-k",
		"command": "editor.action.showHover",
		"when": "vim.mode == 'Normal' && editorTextFocus"
	},
	{
		// Scroll up in quick open selection (picking tab/file)
		"key": "ctrl-k",
		"command": "workbench.action.quickOpenSelectPrevious",
		"when": "inQuickOpen"
	},
	{
		// Scroll down in quick open selection (picking tab/file)
		"key": "ctrl-j",
		"command": "workbench.action.quickOpenSelectNext",
		"when": "inQuickOpen"
	},
	{
		// Scroll up in code suggestions
		"key": "ctrl+k",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		// Scroll down in code suggestions
		"key": "ctrl+j",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
	},
	{
		// Selects word and goes to next match, multicursor
		"key": "ctrl-n",
		"command": "editor.action.addSelectionToNextFindMatch",
		"when": "(vim.mode == 'Normal' || vim.mode == 'Visual') && (editorTextFocus || !inputFocus)"
	},

	// File explorer and menus
	{
		// Close from explorer because shift-escape doesn't work for some reason
		"key": "e",
		"command": "runCommands",
		"args": {
			"commands": [
				"workbench.action.closeSidebar",
				"workbench.action.focusActiveEditorGroup"
			]
		},
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Rename file in explorer
		"key": "r",
		"command": "renameFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// GoTo/collapse parent folder in explorer
		"key": "c",
		"command": "list.collapse",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Cut file in explorer
		"key": "x",
		"command": "filesExplorer.cut",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Delete file in explorer
		"key": "d",
		"command": "deleteFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Paste file in explorer
		"key": "p",
		"command": "filesExplorer.paste",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Copy file in explorer
		"key": "y",
		"command": "filesExplorer.copy",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Create new file in explorer
		"key": "a",
		"command": "explorer.newFile",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	{
		// Create new folder in explorer
		"key": "shift-a",
		"command": "explorer.newFolder",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
	},
	// {
	// 	// Open file from explorer
	// 	"key": "enter",
	// 	"command": "runCommands",
	// 	"args": {
	// 		"commands": [
	// 			"explorer.openAndPassFocus",
	// 			"workbench.action.closeSidebar"
	// 		]
	// 	},
	// 	"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
	// },
	// {
	// 	// Expand/collapse folder in explorer
	// 	"key": "enter",
	// 	"command": "list.toggleExpand",
	// 	"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && explorerResourceIsFolder && !inputFocus"
	// },
	{
		// Open selection in peek view, might count for other stuff idk
		"key": "o",
		"command": "list.select",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	},
	{
		// In explorer, open file and close sidebar
		"key": "o",
		"command": "runCommands",
		"args": {
			"commands": [
				"explorer.openAndPassFocus",
				"workbench.action.closeSidebar"
			]
		},
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsRoot && !explorerResourceIsFolder && !inputFocus"
	},
	{
		// Close active editor
		"key": "ctrl-w",
		"command": "workbench.action.closeActiveEditor"
	},
	{
		// Close all editors in group except the active one
		"key": "ctrl-shift-w",
		"command": "workbench.action.closeOtherEditors"
	},

	// Settings
	{
		// Open settings json (macos)
		"key": "shift-cmd-,",
		"command": "workbench.action.openSettingsJson"
	},
	{
		// Open keybindings json (macos)
		"key": "shift-cmd-k shift-cmd-s",
		"command": "workbench.action.openGlobalKeybindingsFile"
	},

	// Unbindings
	{
		// Run python
		"key": "shift+enter",
		"command": "-python.execInREPL",
		"when": "config.python.REPL.sendToNativeREPL && editorTextFocus && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && editorLangId == 'python'"
	},
	{
		// Run python
		"key": "shift+enter",
		"command": "-python.execSelectionInTerminal",
		"when": "editorTextFocus && !findInputFocussed && !isCompositeNotebook && !jupyter.ownsSelection && !notebookEditorFocused && !replaceInputFocussed && editorLangId == 'python'"
	},
	{
		// Something I misclick and does nothing for me
		"key": "cmd+e",
		"command": "-actions.findWithSelection"
	},
	{
		// Unbind for open settings json
		"key": "shift+cmd+,",
		"command": "-editor.action.inPlaceReplace.up",
		"when": "editorTextFocus && !editorReadonly"
	},
	{
		// Unbind for open settings json
		"key": "shift+cmd+,",
		"command": "-workbench.action.terminal.configureSuggestSettings",
		"when": "terminalFocus && terminalHasBeenCreated && terminalIsOpen && terminalSuggestWidgetVisible || terminalFocus && terminalIsOpen && terminalProcessSupported && terminalSuggestWidgetVisible"
	},
	{
		// Unbind for closing editor
		"key": "ctrl+w",
		"command": "-workbench.action.switchWindow"
	},
	{
		// Unbind for closing editor
		"key": "ctrl+w",
		"command": "-extension.vim_ctrl+w",
		"when": "editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"
	},
	{
		// Unbind to force 'o' or 'enter' to open file
		"key": "space",
		"command": "-filesExplorer.openFilePreserveFocus",
		"when": "filesExplorerFocus && foldersViewVisible && !explorerResourceIsFolder && !inputFocus"
	},
	{
		// Unbind to force 'o' or 'enter' to open folder
		"key": "space",
		"command": "-list.toggleExpand",
		"when": "listFocus && !inputFocus && !treestickyScrollFocused"
	}
]

